{"version":3,"sources":["pages/ProductDetail.js"],"names":["connect","state","CartReducer","addItemToCart","removeItemFromCart","props","item","params","useParams","useState","data","setData","loading","setLoading","useEffect","Axios","get","then","finally","id","md","className","alt","title","src","image","description","color","price","cartItems","find","a","onClick","width","height","CartSvg"],"mappings":"4OAqFeA,uBAFS,SAAAC,GAAK,OAAIA,EAAMC,cAInC,CACIC,kBACAC,wBAJOJ,EA7Ef,SAAuBK,GACnB,IAMkBC,EANZC,EAASC,cADW,EAEFC,mBAAS,MAFP,mBAEnBC,EAFmB,KAEbC,EAFa,OAGIF,oBAAS,GAHb,mBAGnBG,EAHmB,KAGVC,EAHU,KAuB1B,OAbAC,qBAAU,WACND,GAAW,GACXE,IAAMC,IAAN,UAPQ,wBAOR,WACKC,MAAK,YAAe,IAAZP,EAAW,EAAXA,KAELC,EAAQD,MAEXQ,SAAQ,WACLL,GAAW,QAEpB,CAACN,EAAOY,KAGPP,EAAiB,0CAIjB,kDACuBL,EAAOY,GACzBT,EACG,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKU,GAAI,GACL,yBAAKC,UAAU,QAAQC,IAAKZ,EAAKa,MAAOC,IAAKd,EAAKe,SAEtD,kBAAC,IAAD,CAAKL,GAAI,GACL,4BAAKV,EAAKa,OACV,2BAAIb,EAAKgB,aACT,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,MAAM,WAAWjB,EAAKkB,MAA9B,QA/BNtB,EAgCgBI,EAAML,EAAMwB,UA/BvBC,MAAK,SAACC,GAAD,OAAOA,EAAEZ,KAAOb,EAAKa,MAgCrB,kBAAC,IAAD,CACAQ,MAAM,UACNK,QAAS,kBAAI3B,EAAMD,mBAAmBM,EAAKS,MAF3C,oBAOI,kBAAC,IAAD,CACIE,UAAU,4BACVW,QAAS,kBAAM3B,EAAMF,cAAcO,IACnCiB,MAAM,WAHV,cAMI,yBACIN,UAAU,OACVY,MAAM,KACNC,OAAO,KACPZ,IAAI,OACJE,IAAKW,WAS7B,kDACwB5B,EAAOY,GAD/B","file":"static/js/9.5809ac72.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { Row, Col, ButtonGroup, Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { addItemToCart, removeItemFromCart } from '../redux/actions';\r\nimport CartSvg from '../assets/icons/cart.svg';\r\n\r\nfunction ProductDetail(props) {\r\n    const params = useParams();\r\n    const [data, setData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const url = \"http://localhost:8000\";\r\n\r\n    const isInCart = (item, cartItems) => {\r\n        return !!cartItems.find((a) => a.id === item.id);\r\n    }\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        Axios.get(`${url}/posts`)\r\n            .then(({ data }) => {\r\n\r\n                setData(data);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n    }, [params.id])\r\n\r\n\r\n    if (loading) return (<h1>Loading...</h1>)\r\n\r\n\r\n    return (\r\n        <div>\r\n            Product Detail of {params.id}\r\n            {data ? (\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <img className='w-100' alt={data.title} src={data.image} />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <h1>{data.title}</h1>\r\n                        <p>{data.description}</p>\r\n                        <ButtonGroup>\r\n                            <Button color=\"primary\">{data.price} $ </Button>\r\n                            {isInCart(data, props.cartItems) ? (\r\n                                <Button \r\n                                color=\"warning\"\r\n                                onClick={()=>props.removeItemFromCart(data.id)}\r\n                                >\r\n                                    Remove from cart\r\n                                </Button>\r\n                            ) : (\r\n                                    <Button\r\n                                        className=\"d-flex align-items-center\"\r\n                                        onClick={() => props.addItemToCart(data)}\r\n                                        color=\"success\"\r\n                                    >\r\n                                        Add To Card\r\n                                        <img\r\n                                            className=\"ml-1\"\r\n                                            width=\"20\"\r\n                                            height=\"20\"\r\n                                            alt=\"cart\"\r\n                                            src={CartSvg} />\r\n                                    </Button>\r\n                            )}\r\n\r\n                        </ButtonGroup>\r\n                    </Col>\r\n\r\n                </Row>\r\n            ) : (\r\n                    <h4>\r\n                        Error 404: Product {params.id} is not defined\r\n                    </h4>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => state.CartReducer;\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { \r\n        addItemToCart,\r\n        removeItemFromCart\r\n    }\r\n)(ProductDetail);\r\n"],"sourceRoot":""}